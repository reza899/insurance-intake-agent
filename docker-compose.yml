services:
  api:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      # Override specific values for Docker networking
      - MONGODB_URL=mongodb://mongodb:27017
      - REDIS_URL=redis://redis:6379
      - HOST=0.0.0.0
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - insurance-network
    restart: unless-stopped

  ui:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8501:8501"
    env_file:
      - .env
    environment:
      # Override for Docker networking
      - API_BASE_URL=http://api:8000
    depends_on:
      api:
        condition: service_healthy
    networks:
      - insurance-network
    restart: unless-stopped
    command: ["python", "src/ui/gradio_app.py"]

  mongodb:
    image: mongo:6
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=insurance_agent
    volumes:
      - mongodb_data:/data/db
    networks:
      - insurance-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - insurance-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mongodb_data:
  redis_data:

networks:
  insurance-network:
    driver: bridge